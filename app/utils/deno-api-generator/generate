#!/bin/bash -e

# 
# This script generates controllers, services and models.
#
# OPTIONS
# -c        Generates a controller.
# -m        Generates a model
# -r        Generates a router.
# -s        Generates a service.        
#

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
entryPoint="$SCRIPT_DIR/src/generate.ts"
model=false
router=false
service=false
help=false
resourcePath="./app/resources/$2";

while getopts mrsh flag
do
  case "${flag}" in
      m) model=true;;
      r) router=true;;
      s) service=true;;
      h) help=true;;
  esac
done

if "$help" || [ -z "$2" ] || [ $service == "false" ] && [ $model == "false" ] && [ $router == "false" ]; then
    echo ""
    echo "This script generates controllers, services, models and routers."
    echo "Pass an option and a name for the component."
    echo ""
    echo "OPTIONS: "
    echo "-m    Generates a model."
    echo "-r    Generates a router."
    echo "-s    Generates a service."
    echo ""
    exit
fi

mkdir $resourcePath

if "$model" && [ ! -z "$2" ]; then
    deno run --allow-read  --allow-write --no-check $entryPoint model $2 $resourcePath
fi

if "$router" && [ ! -z "$2" ]; then
    deno run --allow-read  --allow-write --no-check $entryPoint router $2 $resourcePath
fi

if "$service" && [ ! -z "$2" ]; then
    deno run --allow-read  --allow-write --no-check $entryPoint service $2 $resourcePath
fi