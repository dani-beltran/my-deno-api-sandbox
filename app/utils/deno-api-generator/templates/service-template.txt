import { Values } from "../../../deps.ts";
import { fetchById, fetchList, create, updateById, deleteById } from "../../utils/deno-api/orm-methods.ts";
import { ListParams } from "../../utils/deno-api/types.ts";
import { {{capitalizedName}}, {{capitalizedName}}Schema } from "./{{name}}.model.ts";

interface update{{capitalizedName}}Schema extends {{capitalizedName}}Schema {
  id: number;
}

export function add{{capitalizedName}}(body: {{capitalizedName}}Schema) {
  return create({{capitalizedName}}, body as Values);
}

export function get{{capitalizedName}}({ id }: { id: number }) {
  return fetchById({{capitalizedName}}, id);
}

export function list{{capitalizedName}}(params: ListParams) {
  return fetchList({{capitalizedName}}, params);
}

export function update{{capitalizedName}}({id, ...body}: update{{capitalizedName}}Schema ) {
  const values = body as {{capitalizedName}}Schema as Values;
  return updateById({{capitalizedName}}, id, values);
}

export function delete{{capitalizedName}}({id}: {id:number}) {
  return deleteById({{capitalizedName}}, id);
}
